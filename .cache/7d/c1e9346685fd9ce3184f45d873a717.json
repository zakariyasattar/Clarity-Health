{"id":"node_modules/query.js/lib/composer/MongoQueryComposer.js","dependencies":[{"name":"/Users/zakariyasattar/quirk/package.json","includedInParent":true,"mtime":1716337603724},{"name":"/Users/zakariyasattar/quirk/node_modules/query.js/package.json","includedInParent":true,"mtime":1716337603716},{"name":"../..","loc":{"line":3,"column":46,"index":142},"parent":"/Users/zakariyasattar/quirk/node_modules/query.js/lib/composer/MongoQueryComposer.js","resolved":"/Users/zakariyasattar/quirk/node_modules/query.js/index.js"}],"generated":{"js":"var define;\n(define = typeof define != \"undefined\" ? define : function (deps, factory) {\n    var undefined;\n    module.exports = factory(exports, require(\"../..\").Query);\n    define = undefined;\n});\n\ndefine([\"exports\", \"Query\"], function (exports, Query) {\n\n    var QuerytoMongoMap = {\n        \"lt\": \"$lt\",\n        \"le\": \"$lte\",\n        \"gt\": \"$gt\",\n        \"ge\": \"$gte\",\n        \"in\": \"$in\",\n        \"ne\": \"$ne\",\n        \"not\": \"$not\",\n        \"all\": \"$all\",\n        \"regex\": \"$regex\"\n    };\n\n    var MongoComposer = {\n\n        /**\n         *\n         * @param {Query} query\n         * @return {Object}\n         */\n        compose: function (query) {\n            var hash = query.toObject(),\n                ret = {};\n\n            if (hash.sort) {\n                ret.sort = this.translateSort(hash.sort);\n            }\n\n            if (hash.where) {\n                ret.where = this.translateOperator(hash.where);\n            }\n\n            return ret;\n        },\n        /***\n         *\n         * @param {Array} sort\n         * @return {Object}\n         */\n        translateSort: function (sort) {\n            var ret = {};\n            sort = sort || [];\n            for (var i = 0; i < sort.length; i++) {\n                var sortElement = sort[i];\n                ret[sortElement.field] = sortElement.direction;\n            }\n            return ret;\n        },\n\n        /***\n         *\n         * @param {Object} operator\n         * @return {Object}\n         */\n        translateOperator: function (operator) {\n            var name = operator.operator,\n                ret = {},\n                field;\n            if (name === \"and\" || name === \"or\") {\n                ret[\"$\" + name] = this.translateExpressions(operator.expressions);\n            } else if (name === \"eql\") {\n                field = operator.field;\n                ret[field] = operator.value;\n            } else if (QuerytoMongoMap.hasOwnProperty(name)) {\n                field = operator.field;\n\n                ret[field] = {};\n                ret[field][QuerytoMongoMap[name]] = operator.value;\n            } else if (name === \"between\") {\n                field = operator.field;\n                ret[field].$gt = operator.value[0];\n                ret[field].$lt = operator.value[1];\n            } else {\n                throw new Error(\"Query Operator '\" + name + \"' is not supported!\");\n            }\n\n            return ret;\n        },\n\n        /***\n         *\n         * @param {Array} expressions\n         * @return {Array}\n         */\n        translateExpressions: function (expressions) {\n            var ret = [];\n            for (var i = 0; i < expressions.length; i++) {\n                var expression = expressions[i];\n                if (expression.operator) {\n                    ret.push(this.translateOperator(expression));\n                } else if (expression instanceof Array) {\n                    ret.push(this.translateExpressions(expression));\n                } else {\n                    ret.push(expression);\n                }\n            }\n            return ret;\n        }\n    };\n\n    exports.MongoQueryComposer = MongoComposer;\n\n    return exports;\n});"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/query.js/lib/composer/MongoQueryComposer.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}}],"sources":{"node_modules/query.js/lib/composer/MongoQueryComposer.js":"(define = typeof define != \"undefined\" ? define : function (deps, factory) {\n    var undefined;\n    module.exports = factory(exports, require(\"../..\").Query);\n    define = undefined;\n});\n\ndefine([\"exports\", \"Query\"], function (exports, Query) {\n\n    var QuerytoMongoMap = {\n        \"lt\": \"$lt\",\n        \"le\": \"$lte\",\n        \"gt\": \"$gt\",\n        \"ge\": \"$gte\",\n        \"in\": \"$in\",\n        \"ne\": \"$ne\",\n        \"not\": \"$not\",\n        \"all\": \"$all\",\n        \"regex\": \"$regex\"\n    };\n\n    var MongoComposer = {\n\n        /**\n         *\n         * @param {Query} query\n         * @return {Object}\n         */\n        compose: function (query) {\n            var hash = query.toObject(),\n                ret = {};\n\n            if (hash.sort) {\n                ret.sort = this.translateSort(hash.sort);\n            }\n\n            if (hash.where) {\n                ret.where = this.translateOperator(hash.where);\n            }\n\n            return ret;\n        },\n        /***\n         *\n         * @param {Array} sort\n         * @return {Object}\n         */\n        translateSort: function (sort) {\n            var ret = {};\n            sort = sort || [];\n            for (var i = 0; i < sort.length; i++) {\n                var sortElement = sort[i];\n                ret[sortElement.field] = sortElement.direction;\n            }\n            return ret;\n        },\n\n        /***\n         *\n         * @param {Object} operator\n         * @return {Object}\n         */\n        translateOperator: function (operator) {\n            var name = operator.operator,\n                ret = {},\n                field;\n            if (name === \"and\" || name === \"or\") {\n                ret[\"$\" + name] = this.translateExpressions(operator.expressions);\n            } else if (name === \"eql\") {\n                field = operator.field;\n                ret[field] = operator.value;\n            } else if (QuerytoMongoMap.hasOwnProperty(name)) {\n                field = operator.field;\n\n                ret[field] = {};\n                ret[field][QuerytoMongoMap[name]] = operator.value;\n            } else if (name === \"between\") {\n                field = operator.field;\n                ret[field].$gt = operator.value[0];\n                ret[field].$lt = operator.value[1];\n            } else {\n                throw new Error(\"Query Operator '\" + name + \"' is not supported!\");\n            }\n\n            return ret;\n        },\n\n        /***\n         *\n         * @param {Array} expressions\n         * @return {Array}\n         */\n        translateExpressions: function (expressions) {\n            var ret = [];\n            for (var i = 0; i < expressions.length; i++) {\n                var expression = expressions[i];\n                if (expression.operator) {\n                    ret.push(this.translateOperator(expression));\n                } else if (expression instanceof Array) {\n                    ret.push(this.translateExpressions(expression));\n                } else {\n                    ret.push(expression);\n                }\n            }\n            return ret;\n        }\n    };\n\n    exports.MongoQueryComposer = MongoComposer;\n\n    return exports;\n});"},"lineCount":112}},"error":null,"hash":"47f3ef7f1b9bca5bf5268eefde659ca6","cacheData":{"env":{}}}